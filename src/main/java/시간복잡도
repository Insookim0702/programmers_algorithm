N의 범위가 500인 경우 : 시간복잡도가 O(N^3)인 알고리즘을 설계하면 문제를 풀 수 있다.
N의 범위가 2,000인 경우 : 시간복잡도가 O(N^2)인 알고리즘을 설계하면 문제를 풀 수 있다.
N의 범위가 100,000인 경우 : 시간복잡도가 O(NlogN)인 알고리즘을 설계하면 문제를 풀 수 있다.
N의 범위가 10,000,000인 경우 : 시간복잡도가 O(N)인 알고리즘을 설계하면 문제를 풀 수 있다.


DFS O(N)
BFS O(N)

정렬
선택정렬 O(N^2)
삽입정렬 O(N^2)
순차 탐색 O(N)
이진 탐색 O(logN)
